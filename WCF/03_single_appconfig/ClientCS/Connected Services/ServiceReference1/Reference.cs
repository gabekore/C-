//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientCS.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/HelloWorld", ReplyAction="http://tempuri.org/IService/HelloWorldResponse")]
        string HelloWorld(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/HelloWorld", ReplyAction="http://tempuri.org/IService/HelloWorldResponse")]
        System.Threading.Tasks.Task<string> HelloWorldAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UseOverLoad", ReplyAction="http://tempuri.org/IService/UseOverLoadResponse")]
        string UseOverLoad(int num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UseOverLoad", ReplyAction="http://tempuri.org/IService/UseOverLoadResponse")]
        System.Threading.Tasks.Task<string> UseOverLoadAsync(int num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CalcPlus", ReplyAction="http://tempuri.org/IService/CalcPlusResponse")]
        int CalcPlus(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CalcPlus", ReplyAction="http://tempuri.org/IService/CalcPlusResponse")]
        System.Threading.Tasks.Task<int> CalcPlusAsync(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CalcMinus", ReplyAction="http://tempuri.org/IService/CalcMinusResponse")]
        ClientCS.ServiceReference1.CalcMinusResponse CalcMinus(ClientCS.ServiceReference1.CalcMinusRequest request);
        
        // CODEGEN: 操作に複数の戻り値があるため、メッセージ コントラクトを生成しています。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CalcMinus", ReplyAction="http://tempuri.org/IService/CalcMinusResponse")]
        System.Threading.Tasks.Task<ClientCS.ServiceReference1.CalcMinusResponse> CalcMinusAsync(ClientCS.ServiceReference1.CalcMinusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UsetTuple", ReplyAction="http://tempuri.org/IService/UsetTupleResponse")]
        System.ValueTuple<string, int> UseTuple(string name, int age);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UsetTuple", ReplyAction="http://tempuri.org/IService/UsetTupleResponse")]
        System.Threading.Tasks.Task<System.ValueTuple<string, int>> UsetTupleAsync(string name, int age);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UseClass", ReplyAction="http://tempuri.org/IService/UseClassResponse")]
        Interface.RetClass UseClass(Interface.ArgClass argClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UseClass", ReplyAction="http://tempuri.org/IService/UseClassResponse")]
        System.Threading.Tasks.Task<Interface.RetClass> UseClassAsync(Interface.ArgClass argClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UseListClass", ReplyAction="http://tempuri.org/IService/UseListClassResponse")]
        Interface.RetClass[] UseListClass(Interface.ArgClass[] argClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UseListClass", ReplyAction="http://tempuri.org/IService/UseListClassResponse")]
        System.Threading.Tasks.Task<Interface.RetClass[]> UseListClassAsync(Interface.ArgClass[] argClass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UseArray", ReplyAction="http://tempuri.org/IService/UseArrayResponse")]
        int[] UseArray(string[] numCharAry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UseArray", ReplyAction="http://tempuri.org/IService/UseArrayResponse")]
        System.Threading.Tasks.Task<int[]> UseArrayAsync(string[] numCharAry);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalcMinus", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CalcMinusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int a;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int b;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int result;
        
        public CalcMinusRequest() {
        }
        
        public CalcMinusRequest(int a, int b, int result) {
            this.a = a;
            this.b = b;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalcMinusResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CalcMinusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int result;
        
        public CalcMinusResponse() {
        }
        
        public CalcMinusResponse(int result) {
            this.result = result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : ClientCS.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<ClientCS.ServiceReference1.IService>, ClientCS.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld(string name) {
            return base.Channel.HelloWorld(name);
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync(string name) {
            return base.Channel.HelloWorldAsync(name);
        }
        
        public string UseOverLoad(int num) {
            return base.Channel.UseOverLoad(num);
        }
        
        public System.Threading.Tasks.Task<string> UseOverLoadAsync(int num) {
            return base.Channel.UseOverLoadAsync(num);
        }
        
        public int CalcPlus(int a, int b) {
            return base.Channel.CalcPlus(a, b);
        }
        
        public System.Threading.Tasks.Task<int> CalcPlusAsync(int a, int b) {
            return base.Channel.CalcPlusAsync(a, b);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ClientCS.ServiceReference1.CalcMinusResponse ClientCS.ServiceReference1.IService.CalcMinus(ClientCS.ServiceReference1.CalcMinusRequest request) {
            return base.Channel.CalcMinus(request);
        }
        
        public void CalcMinus(int a, int b, ref int result) {
            ClientCS.ServiceReference1.CalcMinusRequest inValue = new ClientCS.ServiceReference1.CalcMinusRequest();
            inValue.a = a;
            inValue.b = b;
            inValue.result = result;
            ClientCS.ServiceReference1.CalcMinusResponse retVal = ((ClientCS.ServiceReference1.IService)(this)).CalcMinus(inValue);
            result = retVal.result;
        }
        
        public System.Threading.Tasks.Task<ClientCS.ServiceReference1.CalcMinusResponse> CalcMinusAsync(ClientCS.ServiceReference1.CalcMinusRequest request) {
            return base.Channel.CalcMinusAsync(request);
        }
        
        public System.ValueTuple<string, int> UseTuple(string name, int age) {
            return base.Channel.UseTuple(name, age);
        }
        
        public System.Threading.Tasks.Task<System.ValueTuple<string, int>> UsetTupleAsync(string name, int age) {
            return base.Channel.UsetTupleAsync(name, age);
        }
        
        public Interface.RetClass UseClass(Interface.ArgClass argClass) {
            return base.Channel.UseClass(argClass);
        }
        
        public System.Threading.Tasks.Task<Interface.RetClass> UseClassAsync(Interface.ArgClass argClass) {
            return base.Channel.UseClassAsync(argClass);
        }
        
        public Interface.RetClass[] UseListClass(Interface.ArgClass[] argClass) {
            return base.Channel.UseListClass(argClass);
        }
        
        public System.Threading.Tasks.Task<Interface.RetClass[]> UseListClassAsync(Interface.ArgClass[] argClass) {
            return base.Channel.UseListClassAsync(argClass);
        }
        
        public int[] UseArray(string[] numCharAry) {
            return base.Channel.UseArray(numCharAry);
        }
        
        public System.Threading.Tasks.Task<int[]> UseArrayAsync(string[] numCharAry) {
            return base.Channel.UseArrayAsync(numCharAry);
        }
    }
}
