<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2" />
    </startup>


  <!--
  アプリケーション構成ファイルに設定を記述することで
  コードからエンドポイントの記述が無くなる。
  -->

  <!--
  サービス ライブラリ プロジェクトの展開時に、
  構成ファイルの内容をホストの app.config ファイルに追加する必要があります。
  System.Configuration は、ライブラリの構成ファイルをサポートしていません。
  -->
  <system.serviceModel>

    <!--
    ************************************************************************
    * １．サービスズ
    ************************************************************************
    -->
    <services>
      <!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      * １．１．サービス
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      -->
      <!-- 注意: サービス名は、サービスの実装の構成名と一致しなければなりません。 -->
      <service name="Server.WCF.Service" behaviorConfiguration="MyServiceBehavior">
        <host>
          <baseAddresses>
            <!--
              このマシンだけでサーバーアプリもクライアントアプリも使う場合はlocalhostでいいが、
              別マシンのクライアントアプリとつなげるのであればlocalhostはダメ
            -->
            <add baseAddress="http://localhost:8081/Gabekore"/>
          </baseAddresses>
        </host>

        <!--
        ========================================================================
        * １．１．１．エンドポイント
        ========================================================================
        -->
        <!-- ▼サービスエンドポイントのABCの部分 -->
        <!-- Service Endpoints -->
        <!-- アドレスは、完全修飾でない限り、上で指定されたベース アドレスに相対的なものとなります -->
        <!--
          nameを付けておくと、Javaのクライアントで以下のように使える（【A】の部分に着目）
          
            // 「com.hoge.fuga.hege」についてはJavaのクライアントのソースに書いてあるのでそちらを参照
            import com.hoge.fuga.hege.IService;
            import com.hoge.fuga.hege.Service;

            Service service = new Service();
            IService proxy = service.getEndpointName();   // 【A】
            String bbbb = proxy.helloWorld("bbb");        // メソッド名が小文字始まりになるので要注意
          
          nameが無い場合（【A】の部分のみ変わる）
            IService proxy = service.getBasicHttpBindingIService();   // 【A】
        -->
        <!--
          addressは本当は何か入れたほうがいいと思うけど、以下の理由により入れないことにした
            ・<add baseAddress="http://999.999.999.999:8081/Gabekore"/>を、
              「http://999.999.999.999:8081」にして、「<endpoint address="Gabekore"」としてもいいんだけども、
              それだとクライアント側で参照するのは「http://999.999.999.999:8081/?wsdl」となる
              これが悪いわけじゃないけど、アクセス先に「Gabekore」という名称(*1)を明示的に入れたい
                        *1：要はこれがサーバーのアプリ名という意識
            ・おそらく「<endpoint address=""」にはAPI名を入れるのが筋なのかもしれないが、
              全API入れようと思ったら「<endpoint address="・・・"」が何行にもなってしまって面倒（試してないから分からんけど）
            ・これで今の所問題出ていない（問題出ればその時にまた考える）
        -->
        <endpoint address="" binding="basicHttpBinding" contract="Interface.IService" name="EndpointName"/>

        <!--
        ========================================================================
        * １．１．２．mexエンドポイント
        ========================================================================
        -->
        <!-- mexエンドポイントの設定は、サービス参照を行う際に必要。-->
        <!-- Metadata Endpoints -->
        <!-- Metadata Exchange エンドポイントは、サービスが、そのサービス自体をクライアントに記述するために使用されます。 -->
        <!-- このエンドポイントは、セキュリティで保護されたバインドを使用していないため、展開する前にセキュリティで保護するか、削除する必要があります -->
        <!-- このmexのendpointについては分からん・・・ -->
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" name="DemoGWcfSerber"/>
      </service>
    </services>


    <!--
    ************************************************************************
    * ２．ビヘイビアズ（ビヘイビア＝動作）
    ************************************************************************
    -->
    <behaviors>
      <!--
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      * ２．１．サービスビヘイビア
      ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      -->
      <serviceBehaviors>
        <!--
        ========================================================================
        * ２．１．１．ビヘイビア
        ========================================================================
        -->
        <behavior name="MyServiceBehavior">
          <!--
          メタデータ情報の開示を避けるには、
          展開する前に、
          下の値を false に設定し、
          上のメタデータのエンドポイントを削除します
          -->
          <serviceMetadata httpGetEnabled="True" />

          <!--
          デバッグ目的で障害発生時の例外の詳細を受け取るには、
          下の値を true に設定します。
          例外情報の開示を避けるには、
          展開する前に false に設定します
          -->
          <serviceDebug includeExceptionDetailInFaults="True" />
        </behavior>
      </serviceBehaviors>
    </behaviors>

  </system.serviceModel>
  
</configuration>