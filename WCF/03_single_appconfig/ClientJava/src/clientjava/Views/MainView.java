package clientjava.Views;

import com.gabekore.api.ArgClass;
import com.gabekore.api.ArrayOfArgClass;
import com.gabekore.api.ArrayOfRetClass;
import com.gabekore.api.ArrayOfint;
import com.gabekore.api.ArrayOfstring;
import com.gabekore.api.IService;
import com.gabekore.api.RetClass;
import com.gabekore.api.Service;
import com.gabekore.api.ValueTupleOfstringint;
import java.util.List;
import javax.swing.JOptionPane;
import javax.xml.bind.JAXBElement;
import javax.xml.namespace.QName;
import javax.xml.ws.Holder;


public class MainView extends javax.swing.JFrame {

    public MainView() {
        initComponents();
        

    }

    //-------------------------------------------------
    // Private
    //-------------------------------------------------

    /**
     * ログ用テキストボックスにテキスト表示
     * @param log
     * @param methodName 
     */
    private void SetLog(String log, String methodName) {
        TxbLog.setText(TxbLog.getText() + String.format("%s : %s%s",methodName, log, System.lineSeparator()));
    }
    
    
    
    //-------------------------------------------------
    // イベントハンドラ
    //-------------------------------------------------
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnHelloWorld = new javax.swing.JButton();
        BtnCalcPlus = new javax.swing.JButton();
        BtnCalcMinus = new javax.swing.JButton();
        BtnUsetTuple = new javax.swing.JButton();
        BtnUseClass = new javax.swing.JButton();
        BtnUseListClass = new javax.swing.JButton();
        BtnUseArray = new javax.swing.JButton();
        BtnOverLoad = new javax.swing.JButton();
        ScrLog = new javax.swing.JScrollPane();
        TxbLog = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(550, 550));
        setPreferredSize(new java.awt.Dimension(550, 550));
        getContentPane().setLayout(null);

        BtnHelloWorld.setText("HelloWorld");
        BtnHelloWorld.setMaximumSize(new java.awt.Dimension(120, 90));
        BtnHelloWorld.setMinimumSize(new java.awt.Dimension(120, 90));
        BtnHelloWorld.setPreferredSize(new java.awt.Dimension(120, 90));
        BtnHelloWorld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnHelloWorldActionPerformed(evt);
            }
        });
        getContentPane().add(BtnHelloWorld);
        BtnHelloWorld.setBounds(20, 20, 120, 45);

        BtnCalcPlus.setText("CalcPlus");
        BtnCalcPlus.setMaximumSize(new java.awt.Dimension(120, 90));
        BtnCalcPlus.setMinimumSize(new java.awt.Dimension(120, 90));
        BtnCalcPlus.setPreferredSize(new java.awt.Dimension(120, 90));
        BtnCalcPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCalcPlusActionPerformed(evt);
            }
        });
        getContentPane().add(BtnCalcPlus);
        BtnCalcPlus.setBounds(20, 90, 120, 45);

        BtnCalcMinus.setText("CalcMinus");
        BtnCalcMinus.setMaximumSize(new java.awt.Dimension(120, 90));
        BtnCalcMinus.setMinimumSize(new java.awt.Dimension(120, 90));
        BtnCalcMinus.setPreferredSize(new java.awt.Dimension(120, 90));
        BtnCalcMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCalcMinusActionPerformed(evt);
            }
        });
        getContentPane().add(BtnCalcMinus);
        BtnCalcMinus.setBounds(20, 160, 120, 45);

        BtnUsetTuple.setText("UsetTuple");
        BtnUsetTuple.setMaximumSize(new java.awt.Dimension(120, 90));
        BtnUsetTuple.setMinimumSize(new java.awt.Dimension(120, 90));
        BtnUsetTuple.setPreferredSize(new java.awt.Dimension(120, 90));
        BtnUsetTuple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnUsetTupleActionPerformed(evt);
            }
        });
        getContentPane().add(BtnUsetTuple);
        BtnUsetTuple.setBounds(20, 230, 120, 45);

        BtnUseClass.setText("UseClass");
        BtnUseClass.setMaximumSize(new java.awt.Dimension(120, 90));
        BtnUseClass.setMinimumSize(new java.awt.Dimension(120, 90));
        BtnUseClass.setPreferredSize(new java.awt.Dimension(120, 90));
        BtnUseClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnUseClassActionPerformed(evt);
            }
        });
        getContentPane().add(BtnUseClass);
        BtnUseClass.setBounds(170, 20, 120, 45);

        BtnUseListClass.setText("UseListClass");
        BtnUseListClass.setMaximumSize(new java.awt.Dimension(120, 90));
        BtnUseListClass.setMinimumSize(new java.awt.Dimension(120, 90));
        BtnUseListClass.setPreferredSize(new java.awt.Dimension(120, 90));
        BtnUseListClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnUseListClassActionPerformed(evt);
            }
        });
        getContentPane().add(BtnUseListClass);
        BtnUseListClass.setBounds(170, 90, 120, 45);

        BtnUseArray.setText("UseArray");
        BtnUseArray.setMaximumSize(new java.awt.Dimension(120, 90));
        BtnUseArray.setMinimumSize(new java.awt.Dimension(120, 90));
        BtnUseArray.setPreferredSize(new java.awt.Dimension(120, 90));
        BtnUseArray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnUseArrayActionPerformed(evt);
            }
        });
        getContentPane().add(BtnUseArray);
        BtnUseArray.setBounds(170, 160, 120, 45);

        BtnOverLoad.setText("OverLoad");
        BtnOverLoad.setEnabled(false);
        BtnOverLoad.setMaximumSize(new java.awt.Dimension(120, 90));
        BtnOverLoad.setMinimumSize(new java.awt.Dimension(120, 90));
        BtnOverLoad.setPreferredSize(new java.awt.Dimension(120, 90));
        BtnOverLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnOverLoadActionPerformed(evt);
            }
        });
        getContentPane().add(BtnOverLoad);
        BtnOverLoad.setBounds(170, 230, 120, 45);

        TxbLog.setColumns(20);
        TxbLog.setRows(5);
        ScrLog.setViewportView(TxbLog);

        getContentPane().add(ScrLog);
        ScrLog.setBounds(20, 310, 490, 190);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnHelloWorldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnHelloWorldActionPerformed
        
        final String methodName = new Object(){}.getClass().getEnclosingMethod().getName();
        
        SetLog("-- ↓ --", methodName);
        
        try {
            Service service = new Service();
            IService endpoint = service.getEndpointName();
            
            //------------------------------------------------------------------
            // APIコール
            //------------------------------------------------------------------
            String result = endpoint.helloWorld("bbb");
            
            SetLog(result, methodName);
            
            endpoint = null;
            service = null;
        } catch(Exception ex) {
            JOptionPane.showConfirmDialog(null, ex.toString());
            SetLog(ex.toString(), methodName);
        }
        
        SetLog("-- ↑ --", methodName);
        
    }//GEN-LAST:event_BtnHelloWorldActionPerformed

    private void BtnCalcPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCalcPlusActionPerformed
        
        final String methodName = new Object(){}.getClass().getEnclosingMethod().getName();
        
        SetLog("-- ↓ --", methodName);
        
        try {
            Service service = new Service();
            IService endpoint = service.getEndpointName();
            
            //------------------------------------------------------------------
            // APIコール
            //------------------------------------------------------------------
            Integer result = endpoint.calcPlus(5,6);
            
            SetLog(result.toString(), methodName);
            
            endpoint = null;
            service = null;
        } catch(Exception ex) {
            JOptionPane.showConfirmDialog(null, ex.toString());
            SetLog(ex.toString(), methodName);
        }
        
        SetLog("-- ↑ --", methodName);
        
    }//GEN-LAST:event_BtnCalcPlusActionPerformed

    private void BtnCalcMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCalcMinusActionPerformed
        
        final String methodName = new Object(){}.getClass().getEnclosingMethod().getName();
        
        SetLog("-- ↓ --", methodName);
        
        try {
            Service service = new Service();
            IService endpoint = service.getEndpointName();
            Holder<Integer> result = new Holder<Integer>();
            
            //------------------------------------------------------------------
            // APIコール
            //------------------------------------------------------------------
            endpoint.calcMinus(5,6,result);
            
            SetLog(result.value.toString(), methodName);
            
            endpoint = null;
            service = null;
        } catch(Exception ex) {
            JOptionPane.showConfirmDialog(null, ex.toString());
            SetLog(ex.toString(), methodName);
        }
        
        SetLog("-- ↑ --", methodName);
        
    }//GEN-LAST:event_BtnCalcMinusActionPerformed

    private void BtnUsetTupleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnUsetTupleActionPerformed
        
        final String methodName = new Object(){}.getClass().getEnclosingMethod().getName();
        
        SetLog("-- ↓ --", methodName);
        
        try {
            Service service = new Service();
            IService endpoint = service.getEndpointName();
            
            //------------------------------------------------------------------
            // APIコール
            //------------------------------------------------------------------
            // Javaは標準APIではTupleが使えないためかクラス化されている
            ValueTupleOfstringint ret = endpoint.useTuple("東村山", 18);
            
            SetLog(ret.getItem1() + "/" + String.valueOf(ret.getItem2()), methodName);
            
            endpoint = null;
            service = null;
        } catch(Exception ex) {
            JOptionPane.showConfirmDialog(null, ex.toString());
            SetLog(ex.toString(), methodName);
        }
        
        SetLog("-- ↑ --", methodName);
        
    }//GEN-LAST:event_BtnUsetTupleActionPerformed

    private void BtnUseClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnUseClassActionPerformed
        
        final String methodName = new Object(){}.getClass().getEnclosingMethod().getName();
        
        SetLog("-- ↓ --", methodName);
        
        try {
            Service service = new Service();
            IService endpoint = service.getEndpointName();
            
            //------------------------------------------------------------------
            // オマケ、ArgClassの中身（resultArgClass.kind）をウォッチで見たいだけ
            //------------------------------------------------------------------
            ArgClass resultArgClass = endpoint.getArgClass();
            
            //------------------------------------------------------------------
            // 引数を作る
            //------------------------------------------------------------------
            ArgClass argClass = new ArgClass();
            // 引数１：price
            argClass.setPrice(123);
            // 引数２：kind、※ただのString型ではなくJAXBElement<String>型なのが面倒
            // QNameについては、ArgClassの@XmlElementRefを参照すべし
            // もしくはGetArgClass()の戻り値の中身をデバッガで見て、そのまんま真似すればいい
            QName qname = new QName(
                                "http://schemas.datacontract.org/2004/07/Interface",
                                "Kind",
                                "");
            JAXBElement<String> kind = new JAXBElement<>(
                                                    qname,
                                                    String.class,
                                                    ArgClass.class,
                                                    "456");
            argClass.setKind(kind);
            
            //------------------------------------------------------------------
            // APIコール
            //------------------------------------------------------------------
            RetClass result = endpoint.useClass(argClass);

            SetLog(String.valueOf(result.getCode()) + "/" + result.getName().getValue(), methodName);
            
            endpoint = null;
            service = null;
        } catch(Exception ex) {
            JOptionPane.showConfirmDialog(null, ex.toString());
            SetLog(ex.toString(), methodName);
        }
        
        SetLog("-- ↑ --", methodName);
        
    }//GEN-LAST:event_BtnUseClassActionPerformed

    private void BtnUseListClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnUseListClassActionPerformed
        
        final String methodName = new Object(){}.getClass().getEnclosingMethod().getName();
        
        SetLog("-- ↓ --", methodName);
        
        try {
            Service service = new Service();
            IService endpoint = service.getEndpointName();
            
            //------------------------------------------------------------------
            // 引数を作る
            //------------------------------------------------------------------
            QName qname = new QName(
                                "http://schemas.datacontract.org/2004/07/Interface",
                                "Kind",
                                "");
            ArrayOfArgClass arrayOfArgClass = new ArrayOfArgClass();
            List<ArgClass> listArgClass = arrayOfArgClass.getArgClass();

            for (int i = 0; i < 10; i++) {
                ArgClass argClass = new ArgClass();
            
                // 引数１：price
                argClass.setPrice(i * i + 3);

                // 引数２：kind
                JAXBElement<String> kind = new JAXBElement<>(
                                                        qname,
                                                        String.class,
                                                        ArgClass.class,
                                                        "A:" + (i + i + i) * 3);
                argClass.setKind(kind);
                
                listArgClass.add(argClass);
            }
            
            //------------------------------------------------------------------
            // APIコール
            //------------------------------------------------------------------
            ArrayOfRetClass result = endpoint.useListClass(arrayOfArgClass);

            List<RetClass> retClass = result.getRetClass();
            
            for (RetClass ret : retClass) {
                SetLog(String.valueOf(ret.getCode()) + "/" + ret.getName().getValue(), methodName);
            }
            
            endpoint = null;
            service = null;
        } catch(Exception ex) {
            JOptionPane.showConfirmDialog(null, ex.toString());
            SetLog(ex.toString(), methodName);
        }
        
        SetLog("-- ↑ --", methodName);
        
    }//GEN-LAST:event_BtnUseListClassActionPerformed

    private void BtnUseArrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnUseArrayActionPerformed
        
        final String methodName = new Object(){}.getClass().getEnclosingMethod().getName();
        
        SetLog("-- ↓ --", methodName);
        
        try {
            Service service = new Service();
            IService endpoint = service.getEndpointName();
            
            // Javaは標準APIではTupleが使えないためかクラス化されている
            ArrayOfstring arrayOfstring = new ArrayOfstring();
            List<String> listString = arrayOfstring.getString();
            listString.add("4444");
            listString.add("55");
            listString.add("6");
            
            //------------------------------------------------------------------
            // APIコール
            //------------------------------------------------------------------
            ArrayOfint result = endpoint.useArray(arrayOfstring);
            
            for (Integer ret : result.getInt()) {
                SetLog(ret.toString(), methodName);            
            }
            
            endpoint = null;
            service = null;
        } catch(Exception ex) {
            JOptionPane.showConfirmDialog(null, ex.toString());
            SetLog(ex.toString(), methodName);
        }
        
        SetLog("-- ↑ --", methodName);
        
    }//GEN-LAST:event_BtnUseArrayActionPerformed

    
    // オーバロードは使えない
    private void BtnOverLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnOverLoadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnOverLoadActionPerformed


    
    
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCalcMinus;
    private javax.swing.JButton BtnCalcPlus;
    private javax.swing.JButton BtnHelloWorld;
    private javax.swing.JButton BtnOverLoad;
    private javax.swing.JButton BtnUseArray;
    private javax.swing.JButton BtnUseClass;
    private javax.swing.JButton BtnUseListClass;
    private javax.swing.JButton BtnUsetTuple;
    private javax.swing.JScrollPane ScrLog;
    private javax.swing.JTextArea TxbLog;
    // End of variables declaration//GEN-END:variables
}
